package server;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

public class MainServerProcess extends Thread {
	private Socket socket;
	private BufferedReader netIn;
	private PrintWriter netOut;
	private List<User> users = new ArrayList<>();
	private boolean isLogin;

	public MainServerProcess(Socket socket) throws IOException {
		this.socket = socket;
		this.netIn = new BufferedReader(new InputStreamReader(socket.getInputStream()));
		this.netOut = new PrintWriter(socket.getOutputStream(), true);
		User admin = new User("admin", "adminpass");
		users.add(admin);
		this.isLogin = false;
	}

	@Override
	public void run() {
		netOut.println("Welcome!");
		while (!isLogin) {
			try {
				String lastUsername = null;
				String command = netIn.readLine();
				StringTokenizer st = new StringTokenizer(command, " ");
				String commandName = st.nextToken();
				switch (commandName) {
				case "TEN":
					lastUsername = st.nextToken();

					break;
				case "MATKHAU":

					break;

				default:
					netOut.println("command khong hop le");
					break;
				}
			} catch (IOException e) {
				e.printStackTrace();
			}

		}
	}

	private boolean checkUsername(String username) {
		for (User user : users) {
			if (user.getUsername().equals(username)) {
				return true;
			}
		}
		return false;
	}
}
