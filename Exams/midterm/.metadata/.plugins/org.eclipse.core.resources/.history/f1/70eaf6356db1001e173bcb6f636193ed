package zip;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.RandomAccessFile;

public class Zip {
	public static boolean pack(String sFolder, String dFile) throws IOException {
		File file = new File(sFolder);
		if (!file.isDirectory()) {
			return false;
		}
		File[] files = file.listFiles();
		RandomAccessFile raf = new RandomAccessFile(dFile, "rw");
		boolean isLastFile = false;
		for (int i = 0; i < files.length; i++) {
			File fileItem = files[i];
			isLastFile = (i == files.length - 1);
			writeFile(fileItem, raf, isLastFile);
		}

		return true;
	}

	private static void writeFile(File file, RandomAccessFile raf, boolean isLastFile) throws IOException {
		long nextEntry = 0;
		long fileSize = file.length();
		String fileName = file.getName();

		long locationNextEntry = raf.getFilePointer();
		raf.writeLong(0);
		raf.writeLong(fileSize);
		raf.writeUTF(fileName);

		FileInputStream fis = new FileInputStream(file);
		byte[] buff = new byte[1024];
		int data = 0;
		while ((data = fis.read(buff)) != -1) {
			raf.write(buff, 0, data);
		}
		fis.close();
		nextEntry = raf.getFilePointer();
		if (isLastFile) {
			raf.seek(locationNextEntry);
			raf.writeLong(nextEntry);
			raf.seek(raf.length());
		}
		raf.close();
	}
}
